
@using Task_10._1.PL;
@using Task_10._1.Entities;
<!DOCTYPE html>
<html>
<head>
    <title>A&U Edit user</title>
</head>
<body>
    @{ if (Request["ID"] == null)
        {
            <div class="container">
                <form id="firstform" method="get" class="form-horizontal">
                    <div>Type user ID:</div>
                    <input type="text" name="ID" class="form-control" />
                    <button type="submit" class="btn btn-primary">Отправить</button>
                </form>
            </div>
        }
    }
    @{
        if (Request["ID"] == null)
        {
            <a href="~/Index">Go back</a>
            return;
        }

        if (!WEBLogic.IsInt(Request["ID"], out int _id))
        {
            <div>This is not a number</div>
            <a href="~/Index">Go back</a>
            return;
        }

        if (!WEBLogic.CheckUser(_id))
        {
            <div>User with that ID does not exist</div>
            <a href="~/Index">Go back</a>
            return;
        }
        User _user = WEBLogic.UserBL.GetByID(_id);
        <div class="container">
            <form method="post" class="form-horizontal">
                <div>
                    @(_user.UserID.ToString()). Name:
                    <input type="text" name="name" value="@(_user.Name)" class="form-control" />
                </div>
                <div>
                    Date of birth:
                    <input type="text" name="date" value="@(_user.DateOfBirth.ToShortDateString())" class="form-control" />
                </div>
                <div>Age: @(_user.Age.ToString())</div>
                <div>Awards: </div>

                @{ if (_user.AwardID.Count == 0)
                    {
                        <div>Empty </div>

                    }
                    else
                    {
                        foreach (int _awardId in _user.AwardID)
                        {
                            <div>@(WEBLogic.AwardBL.GetByID(_awardId).Title) </div>
                        }
                    }
                }
                <button type="submit" class="btn btn-primary">Отправить</button>
            </form>
        </div>
        if (Request["name"] == null)
        {
            <a href="~/Index">Go back</a>
            return;
        }
        if (!DateTime.TryParseExact(Request["date"], "dd.MM.yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.AdjustToUniversal, out DateTime _dateOfBirth))
        {
            <div>Incorrect datetime</div>
            <a href="~/Index">Go back</a>
            return;

        }
        WEBLogic.UserBL.EditName(_id, Request["name"]);
        WEBLogic.UserBL.EditDateOfBirth(_id, _dateOfBirth);
        <div>User with @(_id.ToString()) ID has been edited successfully</div>
    }
    <a href="~/Index">Go back</a>
</body>
</html>